<?php
/**
 * @file borg_mailers_security.module
 * Send out Security Anouncement emails to users who have subscribed.
 *
 * Users can check a box upon editing there user profile (/user when logged in)
 * to opt into the Backdrop Security email list.
 *
 * Security emails will go out on publishing a security release node of Backdrop
 * core or any Backdrop Contrib project.
 */

/**
 * Implements hook_node_submit().
 *
 * @see _borg_mailers_security_subscribers().
 */
function borg_mailers_security_node_submit($node) {
  // @TODO: check if we've already sent a mail for this sa (Security Announcement)
  // node. That means we need to create a table to store which nodes
  // have already sent out mail.

  // Save the node right quick so we can get an nid.
  $node->save();

  // Check if we have sent mail for this node already.
  $sent = _borg_mailers_check_if_already_sent($node->nid);


  // Check for node type is a project_release or core_release and status = 1.
  if (($node->type == 'sa') && $node->status == 1) {
    $language = language_default();
    $params = array('node' => $node);
    dpm($node);
    $to = _borg_mailers_security_subscribers();
    dpm($to);
    foreach ($to as $t) {
      backdrop_mail('borg_mailers_security', 'borg_mailers_security_email', $t, $language, $params);
    }
    watchdog('borg_mailers_security', t('Mail sent to Backdrop CMS Security list subscribers.'), $variables = array(), WATCHDOG_NOTICE, NULL);

    backdrop_set_message(t('Mail sent to Backdrop CMS Security list subscribers.'));
  }
}

/**
 * Implements hook_mail().
 */
function borg_mailers_security_mail($key, &$message, $params) {
  if ($key == 'borg_mailers_security_email') {
    // Just copy over the subject and body as provided.
    $message['subject'] = $params['node']->title;
    $body = field_get_items('node', $params['node'], 'body');
    $message['body'][] = backdrop_html_to_text(
      '<p>' .
        t('View online: !url', array('!url' => url('node/' . $params['node']->nid, array('absolute' => TRUE)))) .
      '</p>' . $body[0]['value'] .
      '<p>' . $params['node']->field_sa_versions['und'][0]['value'] . ' </p>' .
      '<p>' . $params['node']->field_sa_solution['und'][0]['value'] . '</p>'
    );
    watchdog('borg_mailers_security', 'made it to hook_mail', $variables = array(), WATCHDOG_NOTICE, NULL);
  }
}

/**
 * Helper function to get the security mailing list subscribers.
 *
 * @return array $to
 * An associative array of email addresses keyed on uid.
 */
function _borg_mailers_security_subscribers() {
  $sql = db_select('field_data_field_security_mailing_list', 'sl')
    ->fields('sl', array('entity_id'))
    ->condition('field_security_mailing_list_value', 1)
    ->execute();

  $to = [];
  foreach ($sql as $s) {
    $account = user_load($s->entity_id);
    $to[$account->uid] = $account->mail;
  }

  return $to;
}

/**
 * Check if mail has already been sent for this Security Announcement (sa).
 *
 * @param string $nid
 * The nid of the node.
 *
 * @return bool
 * TRUE if nid is already recorded; FALSE otherwise.
 */
function _borg_mailers_check_if_already_sent($nid) {
  
}
